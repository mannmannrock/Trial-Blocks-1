//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""eb7ecb16-dcd6-4ad3-82d2-e788a8c998b5"",
            ""actions"": [
                {
                    ""name"": ""Outie Rotation V"",
                    ""type"": ""Value"",
                    ""id"": ""c3cdf938-01fd-4423-9cc8-23fbe8bd524c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Outie Rotation H"",
                    ""type"": ""Value"",
                    ""id"": ""2972f996-83b5-4cbb-8023-8379de97fe0f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Start"",
                    ""type"": ""Button"",
                    ""id"": ""8fde7c7e-6a41-4498-be18-93a051d4ff61"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Innie Jump"",
                    ""type"": ""Button"",
                    ""id"": ""c67ba15d-8626-4d72-a394-7d5a4f5bd8af"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Innie Movement V"",
                    ""type"": ""Value"",
                    ""id"": ""3e5cb92c-3294-416b-988f-01e18de86c55"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Innie Movement H"",
                    ""type"": ""Value"",
                    ""id"": ""26f5eeb8-38f6-4f8e-984b-a060738d3364"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""9f5e2c46-b65f-416e-a1ff-44a9ada96e7b"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Outie Rotation V"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""67b1efb2-bb66-4b7e-b42c-ccb26bf21123"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Outie Rotation V"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""2b0fa474-1b65-48df-b5ed-b8078c09dceb"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Outie Rotation V"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""964a15ee-0be3-4ef7-a62c-e0ab19c041db"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Outie Rotation V"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""3aad9319-973c-4808-98f5-d97dee13739f"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Outie Rotation V"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""5e057f35-3630-4994-9d21-642746c6f454"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Outie Rotation V"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""b8f09060-a981-4fcd-811b-3c3552b75127"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Outie Rotation H"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""162d1d18-1bd1-4b85-8872-0665547fd94b"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Outie Rotation H"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""ea805b3a-d21f-417a-a35c-c85b92260ed1"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Outie Rotation H"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""fe924736-53a5-4b96-bd37-8127660976f3"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Outie Rotation H"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""65edcae5-8895-43f7-9fe3-a3c46eb81c4d"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Outie Rotation H"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""463e1896-8ec6-4472-aec6-d0d28b6f757a"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Outie Rotation H"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""64324614-c00b-459d-a664-d93a0482ad7b"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Innie Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f835ea6c-a3bd-454d-bd18-9fef0913267f"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""210cc394-6e4f-4b4c-8850-91191d76cac2"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Innie Movement V"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""08b66478-ef9b-4c7a-a465-9857d5ab00c5"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Innie Movement V"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""316e2b9f-02ec-4e49-97d3-dda74292cc62"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Innie Movement V"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""18984ee5-2191-4bd7-a671-79424ef7cf73"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Innie Movement H"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""9663d904-0f12-4376-be12-9797894ccd26"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Innie Movement H"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""de5df889-2798-40cd-837d-040a4298fbec"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Innie Movement H"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_OutieRotationV = m_Player.FindAction("Outie Rotation V", throwIfNotFound: true);
        m_Player_OutieRotationH = m_Player.FindAction("Outie Rotation H", throwIfNotFound: true);
        m_Player_Start = m_Player.FindAction("Start", throwIfNotFound: true);
        m_Player_InnieJump = m_Player.FindAction("Innie Jump", throwIfNotFound: true);
        m_Player_InnieMovementV = m_Player.FindAction("Innie Movement V", throwIfNotFound: true);
        m_Player_InnieMovementH = m_Player.FindAction("Innie Movement H", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_OutieRotationV;
    private readonly InputAction m_Player_OutieRotationH;
    private readonly InputAction m_Player_Start;
    private readonly InputAction m_Player_InnieJump;
    private readonly InputAction m_Player_InnieMovementV;
    private readonly InputAction m_Player_InnieMovementH;
    public struct PlayerActions
    {
        private @Controls m_Wrapper;
        public PlayerActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @OutieRotationV => m_Wrapper.m_Player_OutieRotationV;
        public InputAction @OutieRotationH => m_Wrapper.m_Player_OutieRotationH;
        public InputAction @Start => m_Wrapper.m_Player_Start;
        public InputAction @InnieJump => m_Wrapper.m_Player_InnieJump;
        public InputAction @InnieMovementV => m_Wrapper.m_Player_InnieMovementV;
        public InputAction @InnieMovementH => m_Wrapper.m_Player_InnieMovementH;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @OutieRotationV.started += instance.OnOutieRotationV;
            @OutieRotationV.performed += instance.OnOutieRotationV;
            @OutieRotationV.canceled += instance.OnOutieRotationV;
            @OutieRotationH.started += instance.OnOutieRotationH;
            @OutieRotationH.performed += instance.OnOutieRotationH;
            @OutieRotationH.canceled += instance.OnOutieRotationH;
            @Start.started += instance.OnStart;
            @Start.performed += instance.OnStart;
            @Start.canceled += instance.OnStart;
            @InnieJump.started += instance.OnInnieJump;
            @InnieJump.performed += instance.OnInnieJump;
            @InnieJump.canceled += instance.OnInnieJump;
            @InnieMovementV.started += instance.OnInnieMovementV;
            @InnieMovementV.performed += instance.OnInnieMovementV;
            @InnieMovementV.canceled += instance.OnInnieMovementV;
            @InnieMovementH.started += instance.OnInnieMovementH;
            @InnieMovementH.performed += instance.OnInnieMovementH;
            @InnieMovementH.canceled += instance.OnInnieMovementH;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @OutieRotationV.started -= instance.OnOutieRotationV;
            @OutieRotationV.performed -= instance.OnOutieRotationV;
            @OutieRotationV.canceled -= instance.OnOutieRotationV;
            @OutieRotationH.started -= instance.OnOutieRotationH;
            @OutieRotationH.performed -= instance.OnOutieRotationH;
            @OutieRotationH.canceled -= instance.OnOutieRotationH;
            @Start.started -= instance.OnStart;
            @Start.performed -= instance.OnStart;
            @Start.canceled -= instance.OnStart;
            @InnieJump.started -= instance.OnInnieJump;
            @InnieJump.performed -= instance.OnInnieJump;
            @InnieJump.canceled -= instance.OnInnieJump;
            @InnieMovementV.started -= instance.OnInnieMovementV;
            @InnieMovementV.performed -= instance.OnInnieMovementV;
            @InnieMovementV.canceled -= instance.OnInnieMovementV;
            @InnieMovementH.started -= instance.OnInnieMovementH;
            @InnieMovementH.performed -= instance.OnInnieMovementH;
            @InnieMovementH.canceled -= instance.OnInnieMovementH;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnOutieRotationV(InputAction.CallbackContext context);
        void OnOutieRotationH(InputAction.CallbackContext context);
        void OnStart(InputAction.CallbackContext context);
        void OnInnieJump(InputAction.CallbackContext context);
        void OnInnieMovementV(InputAction.CallbackContext context);
        void OnInnieMovementH(InputAction.CallbackContext context);
    }
}
